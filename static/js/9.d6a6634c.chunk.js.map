{"version":3,"sources":["Actions/orders.js","Pages/Account.module.css","Pages/Account.js"],"names":["sendOrderToServer","orderInfo","dispatch","a","type","axios","method","url","process","data","headers","token","response","status","products","request","error","getIndividualOrder","orderId","userInfo","JSON","parse","localStorage","getItem","userId","id","order","getOrdersForUser","user","orders","closeModal","module","exports","Account","componentDidMount","getOrders","props","logOut","logOutUser","history","push","this","className","styles","account","query","render","largerscreenbanner","firstName","lastName","onClick","logoutbtn","adminorderscontainer","logoutbtnmobile","style","borderTop","marginLeft","marginRight","headingscontainer","undefined","length","map","index","ordersdetails","dateOfOrder","split","color","_id","total","lstbtn","orderbtn","Component","withRouter","connect","state","logUserOut"],"mappings":"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","file":"static/js/9.d6a6634c.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const sendOrderToServer = (orderInfo) => {\n  return async (dispatch) => {\n    dispatch({ type: 'ORDER_SENT' });\n    try {\n      let response = await axios({\n        method: 'post',\n        url: `${process.env.REACT_APP_BACK_END_URL}/orders/new-order`,\n        data: {\n          orderInfo,\n        },\n        headers: {\n          token: orderInfo.token,\n        },\n      });\n      if (response.status === 201) {\n        dispatch({ type: 'ORDER_SUCCESS', products: response.data });\n      }\n    } catch (err) {\n      if (err.request && err.request.status === 0) {\n        dispatch({\n          type: 'ORDER_FAIL',\n          error: 'Network error, please try again',\n        });\n      }\n    }\n    // dispatch({ type: 'ORDER_FAIL', error: err.response.data });\n  };\n};\n\nexport const getIndividualOrder = (orderId) => {\n  return async (dispatch) => {\n    let userInfo = JSON.parse(localStorage.getItem('userInfo'));\n    dispatch({ type: 'ORDER_SENT' });\n    try {\n      let response = await axios({\n        method: 'get',\n        url: `${process.env.REACT_APP_BACK_END_URL}/orders/order/${orderId}`,\n\n        headers: {\n          token: userInfo.token,\n          userId: userInfo.id,\n        },\n      });\n      if (response.status === 200) {\n        dispatch({ type: 'INDIVDUAL_ORDER_SUCCESS', order: response.data });\n      }\n    } catch (err) {\n      dispatch({ type: 'ORDER_FAIL', error: err.response.data });\n    }\n  };\n};\n\nexport const getOrdersForUser = ({ token, user }) => {\n  return async (dispatch) => {\n    dispatch({ type: 'ORDER_SENT' });\n    try {\n      let response = await axios({\n        method: 'get',\n        url: `${process.env.REACT_APP_BACK_END_URL}/orders/${user}`,\n        headers: {\n          token: token,\n        },\n      });\n      if (response.status === 200) {\n        dispatch({ type: 'ORDER_LIST_RECEIVED', orders: response.data });\n      }\n    } catch (err) {\n      dispatch({ type: 'ORDER_FAIL', error: err });\n    }\n  };\n};\n\nexport const closeModal = () => {\n  return { type: 'CLOSE_MODAL' };\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"account\":\"Account_account__1DvIx\",\"orderscontainer\":\"Account_orderscontainer__3Pw-e\",\"logoutbtnmobile\":\"Account_logoutbtnmobile__FRGhL\",\"ordersdetails\":\"Account_ordersdetails__2fT42\",\"largerscreenbanner\":\"Account_largerscreenbanner__3EeFv\",\"orderbtn\":\"Account_orderbtn__3JR9v\",\"logoutbtn\":\"Account_logoutbtn__pKX6Q\",\"headingscontainer\":\"Account_headingscontainer__2tDc6\",\"lstbtn\":\"Account_lstbtn__I84s3\"};","/*Npm packages */\nimport React, { Component } from 'react';\nimport Media from 'react-media';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\n/* CSS */\nimport styles from './Account.module.css';\n\n/* Action creators */\n\nimport { getOrdersForUser } from '../Actions/orders.js';\nimport { logUserOut } from '../Actions/users.js';\n\nclass Account extends Component {\n  componentDidMount = () => {\n    let { getOrders } = this.props;\n    let user = JSON.parse(localStorage.getItem('userInfo'));\n    getOrders({ user: user.id, token: user.token });\n  };\n\n  logOut = () => {\n    let { logOutUser } = this.props;\n    logOutUser();\n    this.props.history.push('/');\n  };\n\n  render() {\n    let { orders, user } = this.props;\n\n    return (\n      <div className={styles.account}>\n        <Media\n          query='(min-width: 768px)'\n          render={() => (\n            <div className={styles.largerscreenbanner}>\n              {user && (\n                <p>\n                  Welcome {user.firstName} {user.lastName} | Your Account\n                </p>\n              )}\n\n              <button\n                onClick={() => this.logOut()}\n                className={styles.logoutbtn}>\n                Log out\n              </button>\n            </div>\n          )}\n        />\n        <div className={styles.adminorderscontainer}>\n          <h3>Your Recent orders</h3>\n          <button\n            onClick={() => this.logOut()}\n            className={styles.logoutbtnmobile}>\n            Log out\n          </button>\n        </div>\n        <div\n          style={{\n            borderTop: '2px solid black ',\n            marginLeft: 20,\n            marginRight: 20,\n          }}></div>\n        <div className={styles.orders}>\n          <Media\n            query='(min-width: 768px)'\n            render={() => (\n              <>\n                <div className={styles.headingscontainer}>\n                  <span>Date</span>\n                  <span>Number</span>\n                  <span>Total</span>\n                  <span>Status</span>\n                  <span>What next?</span>\n                </div>\n                <div\n                  style={{\n                    borderTop: '1px solid #bdc3c7 ',\n                    marginLeft: 5,\n                    marginRight: 5,\n                  }}></div>\n              </>\n            )}\n          />\n          {orders !== undefined &&\n            orders.length !== 0 &&\n            orders.map((order, index) => {\n              return (\n                <div key={index}>\n                  <div className={styles.ordersdetails} key={index}>\n                    <span>{order.dateOfOrder.split(' ')[0]}</span>\n                    <span style={{ color: '#2980b9' }}>{order._id}</span>\n                    <span>Total cost: Â£{order.total}</span>\n                    <span style={{ color: '#16a085' }}>{order.status}</span>\n                    <div className={styles.lstbtn}>\n                      <button\n                        onClick={() =>\n                          this.props.history.push(`/order/${order._id}`)\n                        }\n                        className={styles.orderbtn}>\n                        View your order\n                      </button>\n                    </div>\n                  </div>\n                  <div\n                    style={{\n                      borderTop: '1px solid #bdc3c7 ',\n                      marginLeft: 5,\n                      marginRight: 5,\n                    }}></div>\n                </div>\n              );\n            })}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { orders: state.orders.orders, user: state.user.user };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getOrders: (userInfo) => dispatch(getOrdersForUser(userInfo)),\n    logOutUser: () => dispatch(logUserOut()),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(Account)\n);\n"],"sourceRoot":""}